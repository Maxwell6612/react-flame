{"version":3,"sources":["pages/Chat/ChatPage.tsx"],"names":["ws","WebSocket","Chat","useEffect","addEventListener","e","Messages","AddMessageForm","useState","messages","setMessages","newMessages","JSON","parse","data","prevMessages","style","height","overflowY","map","m","index","Message","message","alt","src","photo","width","userName","setMessage","onChange","currentTarget","value","onClick","send","ChatPage"],"mappings":"0IAEMA,EAAK,IAAIC,UAAU,gEAenBC,EAAiB,WAMnB,OAJAC,qBAAU,WACNH,EAAGI,iBAAiB,YAAY,SAACC,SAClC,IAEI,gCACH,cAACC,EAAD,IACA,cAACC,EAAD,QAIFD,EAAqB,WACvB,MAAgCE,mBAA4B,IAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KASA,OAPAP,qBAAU,WACNH,EAAGI,iBAAiB,WAAW,SAACC,GAC5B,IAAIM,EAAcC,KAAKC,MAAMR,EAAES,MAC/BJ,GAAY,SAACK,GAAD,4BAAsBA,GAAtB,YAAuCJ,YAExD,IAEI,qBAAKK,MAAO,CAAEC,OAAQ,QAASC,UAAW,QAA1C,SACFT,EAASU,KAAI,SAACC,EAAGC,GAAJ,OAAc,cAACC,EAAD,CAAqBC,QAASH,GAAhBC,SAI5CC,EAAgD,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACpD,OAAO,gCACH,qBAAKC,IAAI,GAAGC,IAAKF,EAAQG,MAAOV,MAAO,CAACW,MAAO,UAD5C,IACuD,4BAAIJ,EAAQK,WACtE,uBACCL,EAAQA,QACT,2BAKFhB,EAA2B,WAC7B,MAA8BC,mBAAS,IAAvC,mBAAOe,EAAP,KAAgBM,EAAhB,KAUA,OAAO,gCACJ,8BACE,0BAAUC,SAAU,SAACzB,GAAD,OAAOwB,EAAWxB,EAAE0B,cAAcC,QAAQA,MAAOT,MAEtE,8BACI,wBAAQU,QAdI,WACXV,IAILvB,EAAGkC,KAAKX,GACRM,EAAW,MAQP,wBAKGM,UAhEY,WACvB,OAAO,8BACH,cAACjC,EAAD","file":"static/js/5.7556a276.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\n\nexport type ChatMessageType = {\n    message: string,\n    photo: string,\n    userId: number,\n    userName: string\n}\n\nconst ChatPage: React.FC = () => {\n    return <div>\n        <Chat />\n    </div>\n}\n\nconst Chat: React.FC = () => {\n\n    useEffect(() => {\n        ws.addEventListener('messaged', (e) => {})\n    }, [])\n\n    return <div>\n        <Messages />\n        <AddMessageForm />\n    </div>\n}\n\nconst Messages: React.FC = () => {\n    const [messages, setMessages] = useState<ChatMessageType[]>([])\n\n    useEffect(() => {\n        ws.addEventListener('message', (e: MessageEvent) => {\n            let newMessages = JSON.parse(e.data)\n            setMessages((prevMessages) => [...prevMessages, ...newMessages])\n        })\n    }, [])\n\n    return <div style={{ height: '400px', overflowY: 'auto'}}>\n        {messages.map((m, index) => <Message key={index} message={m}/>)}\n    </div>\n}\n\nconst Message: React.FC<{message: ChatMessageType}> = ({message}) => {\n    return <div>\n        <img alt='' src={message.photo} style={{width: '30px'}}/> <b>{message.userName}</b>\n        <br/>\n        {message.message}\n        <hr/>\n    </div>\n}\n\n\nconst AddMessageForm: React.FC = () => {\n    const [message, setMessage] = useState('')\n    const sendMessage = () => {\n        if (!message) {\n            return;\n        }\n\n        ws.send(message);\n        setMessage('')\n    }\n\n    return <div>\n       <div\n        ><textarea onChange={(e) => setMessage(e.currentTarget.value)} value={message}></textarea>\n       </div> \n        <div>\n            <button onClick={sendMessage}>Send</button>\n        </div>\n    </div>\n}\n\nexport default ChatPage"],"sourceRoot":""}