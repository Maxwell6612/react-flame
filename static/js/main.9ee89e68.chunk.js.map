{"version":3,"sources":["assets/images/zoom.jpg","api/api.js","redux/dialogs-reducer.ts","components/Users/users.module.css","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.js","components/Navbar/Navbar.jsx","utils/validators/object-helpers.js","redux/users-reducer.ts","components/common/Paginator/Paginator.tsx","components/Users/User.js","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","components/Header/Header.jsx","redux/auth-reducer.ts","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.ts","redux/sidebar-reducer.ts","redux/redux-store.ts","hoc/withSuspense.js","App.js","index.js","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.ts"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","SEND_MESSAGE","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","child","Input","createField","placeholder","validators","component","text","validate","Navbar","s","nav","item","to","activeClassName","activeLink","active","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","paginator","onClick","p","selectedPage","pageNumber","e","User","user","alt","src","photos","small","userPhoto","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","pageTitle","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","href","title","loginBlock","isAuth","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","style","formSummaryError","length","stopSubmit","_error","INITIALIZED_SUCCESS","initialized","appReducer","sidebarReducer","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","catchAllUnhandledErrors","reason","promise","alert","initializeApp","addEventListener","removeEventListener","exact","path","render","AppContainer","withRouter","Promise","all","JSApp","ReactDOM","document","getElementById","class","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","posts","likesCount","newPostText","addPostActionCreator","setStatus","getUserProfile","file","getState","reject","newPost","postId"],"mappings":"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","file":"static/js/main.9ee89e68.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/zoom.4bb0722e.jpg\";","import * as axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        \"API-KEY\": \"89e2f250-2505-4a1c-a90b-397e41b71ddc\",\n      }\n})\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10){\n      return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n        .then(response => {\n          return response.data;\n        });\n},\n  follow(userId) {\n   return instance.post(`follow/${userId}`)\n  },\n  unfollow(userId) {\n    return instance.delete(`follow/${userId}`)\n  },\n  getProfile(userId) {\n    console.warn('Obsolete method please profileApi object')\n    return profileAPI.getProfile(userId);\n  },\n}\n\nexport const profileAPI = {\n  getProfile(userId) {\n    return instance.get(`profile/` + userId);\n  },\n  getStatus(userId) {\n    return instance.get(`profile/status/` + userId);\n  },\n  updateStatus(status) {\n    return instance.put(`profile/status`, { status: status } );\n  },\n  savePhoto(photoFile) {\n    const formData = new FormData();\n    formData.append(\"image\", photoFile);\n\n    return instance.put(`profile/photo`, formData, {\n        headers: {\n            'Content-Type': 'multipart/form-data'\n        }\n    });\n  },\n  saveProfile(profile) {\n    return instance.put(`profile`, profile );\n  }\n};\n\nexport const authAPI = {\n  me() {\n    return instance.get(`auth/me`)\n  },\n  login( email, password, rememberMe = false, captcha=null ) {\n    return instance.post(`auth/login`, { email, password, rememberMe, captcha})\n  },\n  logout() {\n    return instance.delete(`auth/login`)\n  },\n}\n\nexport const securityAPI = {\n  getCaptchaUrl() {\n    return instance.get(`security/get-captcha-url`)\n  }\n}","const SEND_MESSAGE = \"SEND-MESSAGE\";\n\ntype DialogType = {\n  id: number,\n  name: string\n}\n\ntype MessageType = {\n  id: number,\n  message: string\n}\n\nlet initialState = {\n  dialogs: [\n    { id: 1, name: \"Dallas\" },\n    { id: 2, name: \"Jack\" },\n    { id: 3, name: \"Joseph\" },\n    { id: 4, name: \"Eva\" },\n    { id: 5, name: \"Siberia\" },\n    { id: 6, name: \"Tokio\" },\n  ] as Array<DialogType>,\n  messages: [\n    { id: 1, message: \"Tokio is calling Berlin\" },\n    { id: 2, message: \"Tokio is calling Dock\" },\n    { id: 3, message: \"Tokio is calling Albania\" },\n    { id: 4, message: \"Eva\" },\n    { id: 5, message: \"Siberia\" },\n    { id: 6, message: \"Tokio\" },\n  ] as Array<MessageType>\n};\n\ntype SendMessageCreatorActionType = {\n  type: typeof SEND_MESSAGE,\n  newMessageBody: string\n}\n\nexport type InitialStateType = typeof initialState\n\nconst dialogsReducer = (state = initialState, action: any): InitialStateType => {\n  switch (action.type) {\n    case SEND_MESSAGE:\n      let body = action.newMessageBody;\n      return {\n        ...state,\n        messages: [ ...state.messages, { id: 6, message: body }],\n      };\n    default:\n      return state;\n  }\n};\n\nexport const sendMessageCreator = (newMessageBody: string): SendMessageCreatorActionType => ({ type: SEND_MESSAGE, newMessageBody });\n\nexport default dialogsReducer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1_En6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"activeLink\":\"Navbar_activeLink__3etBE\"};","import React from \"react\";\nimport styles from \"./FormsControls.module.css\";\nimport { Field } from \"redux-form\";\n//import { required } from \"../../../utils/validators/validators\";\n\nconst FormControl = ({input, meta: {touched, error}, children}) => {\n\n    const hasError = touched && error;\n    return (\n        <div className={styles.formControl + \" \" + ( hasError ? styles.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            { hasError && <span>{error}</span>}\n        </div>\n    )\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}> <textarea {...input}{...restProps}/></FormControl>\n}\n\nexport const Input = (props) => {\n    const {input, meta, child,...restProps} = props;\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\n}\n\nexport const createField = (placeholder, name, validators, component, props = {}, text=\"\") => (\n        <div>\n            <Field placeholder={placeholder} \n                   name={name}\n                   validate={validators}\n                   component={component}\n                   {...props}\n        /> {text}\n    </div>\n)","import React from 'react'\nimport { NavLink } from 'react-router-dom';\nimport s from './Navbar.module.css'\n\nconst Navbar = () => {\n    return <nav className={s.nav}>\n          <div className={s.item}>\n            <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\n          </div>\n          <div className={`${s.item} ${s.active}`}>\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\n            </div>\n            <div className={`${s.item} ${s.active}`}>\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\n            </div>\n          <div className={s.item}>\n            <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\n          </div>\n          <div className={s.item}>\n            <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\n          </div>\n          <div className={s.item}>\n            <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\n          </div>\n  </nav>\n}\n\nexport default Navbar;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n  return items.map(u => {\n      if (u[objPropName] === itemId) {\n          return {...u, ...newObjProps}\n      }\n      return u;\n  })\n};","import { UserType } from './../types/types';\nimport {usersAPI} from \"../api/api\";\nimport { updateObjectInArray } from \"../utils/validators/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [] as Array<UserType>,\n    pageSize: 12,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: [] as Array<number>, //array of user numbers\n    fake: 10\n};\n\ntype InitialState = typeof initialState;\n\nconst usersReducer = (state = initialState, action: any): InitialState => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\n            }\n        case SET_USERS: {\n            return {...state, users: action.users}\n        }\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.count}\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id !== action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\ntype FollowSuccessActionType = {\n    type: typeof FOLLOW,\n    userId: number\n}\nexport const followSuccess = (userId: number): FollowSuccessActionType => ({type: FOLLOW, userId})\ntype UnfollowSuccessActionType = {\n    type: typeof UNFOLLOW,\n    userId: number\n}\nexport const unfollowSuccess = (userId: number): UnfollowSuccessActionType => ({type: UNFOLLOW, userId})\ntype SetUsersActionType = {\n    type: typeof SET_USERS,\n    users: Array<UserType>\n}\nexport const setUsers = (users: Array<UserType>): SetUsersActionType => ({type: SET_USERS, users})\ntype SetCurrentPageActionType = {\n    type: typeof SET_CURRENT_PAGE,\n    currentPage: number\n}\nexport const setCurrentPage = (currentPage: number): SetCurrentPageActionType => ({type: SET_CURRENT_PAGE, currentPage})\ntype SetTotalUsersCountActionType = {\n    type: typeof SET_TOTAL_USERS_COUNT,\n    count: number\n}\nexport const setTotalUsersCount = (totalUsersCount: number): SetTotalUsersCountActionType => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\ntype ToggleIsFetchingActionType = {\n    type: typeof TOGGLE_IS_FETCHING,\n    isFetching: boolean\n}\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingActionType => ({type: TOGGLE_IS_FETCHING, isFetching})\ntype ToggleFollowingProgressActionType = {\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching: boolean,\n    userId: number\n}\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number): ToggleFollowingProgressActionType => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n})\n\nexport const requestUsers = (page: number, pageSize: number) => {\n    return async (dispatch: any) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(page));\n\n        let data = await usersAPI.getUsers(page, pageSize);\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    }\n}\n\nconst followUnfollowFlow = async (dispatch: any, userId: number, apiMethod: any, actionCreator: any) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await apiMethod(userId);\n\n    if (response.data.resultCode === 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n}\n\nexport const follow = (userId: number) => {\n    return async (dispatch: any) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\n    }\n}\nexport const unfollow = (userId: number) => {\n    return async (dispatch: any) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\n    }\n}\n\nexport default usersReducer;","import React, {useState} from 'react'\nimport styles from './Paginator.module.css'\nimport cn from \"classnames\"\n\ntype PropsType = {\n    totalItemsCount: number\n    pageSize: number\n    currentPage: number\n    onPageChanged: (pageNumber: number) => void\n    portionSize?: number\n}\n\nlet Paginator: React.FC<PropsType> = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages: Array<number> = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return <div className={cn(styles.paginator)}>\n        { portionNumber > 1 &&\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\n\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\n                .map((p) => {\n                return <span className={ cn({\n                    [styles.selectedPage]: currentPage === p\n                }, styles.pageNumber) }\n                             key={p}\n                             onClick={(e) => {\n                                 onPageChanged(p);\n                             }}>{p}</span>\n            })}\n        { portionCount > portionNumber &&\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\n    </div>\n}\n\nexport default Paginator;","import React from \"react\";\nimport styles from \"./users.module.css\";\nimport userPhoto from \"../../assets/images/zoom.jpg\";\nimport { NavLink } from \"react-router-dom\";\n\nlet User = ({user, followingInProgress, unfollow, follow}) => {\n  return (\n     <div>\n              <span>\n                  <div>\n                     <NavLink to={'/profile/' + user.id}>\n                      <img alt=\"usr face\" src={user.photos.small != null ? user.photos.small : userPhoto}\n                           className={styles.userPhoto}/>\n                     </NavLink>\n                  </div>\n                  <div>\n                      {user.followed\n                          ? <button \n                                    onClick={() => { unfollow(user.id) }}>\n                              Unfollow</button>\n                          : <button \n                                    onClick={() => { follow(user.id) }}>\n                                    Follow</button>}\n\n                  </div>\n              </span>\n              <span>\n                  <span>\n                      <div>{user.name}</div>\n                      <div>{user.status}</div>\n                  </span>\n                  <span>\n                      <div>{\"user.location.country\"}</div>\n                      <div>{\"user.location.city\"}</div>\n                  </span>\n              </span>\n          </div>)\n}\n\nexport default User;","import React, {FC} from 'react';\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from \"./User\";\nimport {UserType} from '../../types/types';\n\ntype PropsType = {\n    totalUsersCount: number\n    pageSize: number\n    currentPage: number\n    onPageChanged: (pageNumber: number) => void\n    users: Array<UserType>\n    followingInProgress: Array<number>\n    unfollow: (userId: number) => void\n    follow: (userId: number) => void\n}\n\n\nlet Users: FC<PropsType> = ({currentPage, totalUsersCount, pageSize, onPageChanged, users,\n                                ...props}) => {\n    return <div>\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\n        <div>\n            {\n                users.map(u => <User user={u}\n                                     followingInProgress={props.followingInProgress}\n                                     key={u.id}\n                                     unfollow={props.unfollow}\n                                     follow={props.follow}\n                    />\n                )\n            }\n        </div>\n    </div>\n}\n\nexport default Users;","import { createSelector } from \"reselect\";\nimport { AppStateType } from \"./redux-store\";\n\nconst getUsersSelector = (state: AppStateType) => {\n    return state.usersPage.users\n}\n\nexport const getUsers = createSelector( getUsersSelector, (users) => {\n    return users.filter(u => true);\n})\n\nexport const getPageSize = (state: AppStateType) => {\n    return state.usersPage.pageSize;\n}\n\nexport const getTotalUsersCount = (state: AppStateType) => {\n    return state.usersPage.totalUsersCount;\n}\n\nexport const getCurrentPage = (state: AppStateType) => {\n    return state.usersPage.currentPage;\n}\n\nexport const getIsFetching = (state: AppStateType) => {\n    return state.usersPage.isFetching;\n}\n\nexport const getFollowingInProgress = (state: AppStateType) => {\n    return state.usersPage.followingInProgress;\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport { follow, unfollow, requestUsers} from '../../redux/users-reducer';\nimport Users from './Users';\nimport Preloader from '../common/Preloader/Preloader';\nimport { compose } from 'redux';\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount, getUsers } from '../../redux/users-selectors';\nimport { UserType } from '../../types/types';\nimport { AppStateType } from '../../redux/redux-store';\n\ntype MapStatePropsType = {\n    currentPage: number\n    pageSize: number\n    isFetching: boolean\n    totalUsersCount: number\n    users: Array<UserType>\n    followingInProgress: Array<number>\n}\n\ntype MapDispatchPropsType = {\n    getUsers: (currentPage: number, pageSize: number) => void\n    unfollow: (userId: number) => void\n    follow: (userId: number) => void\n}\n\ntype OwnPropsType = {\n    pageTitle: string\n}\n\ntype PropsType = MapStatePropsType & MapDispatchPropsType & OwnPropsType\n\nclass UsersContainer extends React.Component<PropsType> {\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props;\n        this.props.getUsers(currentPage, pageSize);\n    }\n\n    onPageChanged = (pageNumber: number) => {\n        const {pageSize} = this.props;\n        this.props.getUsers(pageNumber, pageSize);\n    }\n\n    render() {\n\n        return <>\n            <h2>{this.props.pageTitle}</h2>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\n\nexport default compose(\n    // TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultRootState\n    connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(\n        mapStateToProps,\n        {follow, unfollow, getUsers: requestUsers})\n)(UsersContainer)","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport s from \"./Header.module.css\";\n\nconst Header = (props) => {\n  return <header className={s.header}>\n      {/* <img\n        src=\"https://i.pinimg.com/originals/3f/3d/d9/3f3dd9219f7bb1c9617cf4f154b70383.jpg\"\n        alt=\"\"\n      /> */}\n      <a href=\"https://www.freepnglogos.com/pics/company-logo-ideas\" title=\"Image from freepnglogos.com\"><img src=\"https://www.freepnglogos.com/uploads/company-logo-png/raise-company-logo-digital-product-demo-9.png\" alt=\"Raise company logo, digital product demo\" /></a>\n\n      <div className={s.loginBlock}>\n        {props.isAuth \n          ? <div> {props.login} - <button onClick={props.logout}>Log out</button> </div>\n          : <NavLink to={\"/login\"}>Login</NavLink>}\n      </div>\n    </header>\n};\n\nexport default Header;\n","import {authAPI, securityAPI} from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\n\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\n\nlet initialState = {\n    userId: null as (number | null),\n    email: null as string | null,\n    login: null as string | null,\n    isAuth: false,\n    captchaUrl: null as string | null// if null, then captcha is not required\n};\n\nexport type InitialStateType = typeof initialState;\n\nconst authReducer = (state = initialState, action: any): InitialStateType => {\n    switch (action.type) {\n        case SET_USER_DATA:\n        case GET_CAPTCHA_URL_SUCCESS:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\ntype SetAuthUserDataActionPayloadType = {\n    userId: number | null,\n    email: string | null,\n    login: string | null,\n    isAuth: boolean\n}\ntype SetAuthUserDataActionType = {\n    type: typeof SET_USER_DATA,\n    payload: SetAuthUserDataActionPayloadType\n}\n\nexport const setAuthUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean): SetAuthUserDataActionType => ({\n    type: SET_USER_DATA, payload:\n        {userId, email, login, isAuth}\n});\n\ntype GetCaptchaUrlSuccessActionType = {\n    type: typeof GET_CAPTCHA_URL_SUCCESS\n    payload: { captchaUrl: string }\n}\n\nexport const getCaptchaUrlSuccess = (captchaUrl: string): GetCaptchaUrlSuccessActionType => ({\n    type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}\n});\n\nexport const getAuthUserData = () => async (dispatch: any) => {\n    let response = await authAPI.me();\n\n    if (response.data.resultCode === 0) {\n        let {id, login, email} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n}\n\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: any) => async (dispatch: any) => {\n    let response = await authAPI.login(email, password, rememberMe, captcha);\n    if (response.data.resultCode === 0) {\n        // success, get auth data\n        dispatch(getAuthUserData())\n    } else {\n        if (response.data.resultCode === 10) {\n            dispatch(getCaptchaUrl());\n        }\n\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n        dispatch(stopSubmit(\"login\", {_error: message}));\n    }\n}\n\nexport const getCaptchaUrl = () => async (dispatch: any) => {\n    const response = await securityAPI.getCaptchaUrl();\n    const captchaUrl = response.data.url;\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\n}\n\n\n\nexport const logout = () => async (dispatch: any) => {\n    let response = await authAPI.logout();\n\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n    }\n}\n\nexport default authReducer;","import React from \"react\";\nimport Header from \"./Header\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../redux/auth-reducer\";\n\nclass HeaderContainer extends React.Component {\n\n  render () {\n  return <Header { ...this.props}/>;\n  };\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n  login: state.auth.login,\n});\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\n","import React from \"react\";\nimport { reduxForm } from \"redux-form\";\nimport { required } from \"../../utils/validators/validators\";\nimport { createField, Input } from \"../common/FormsControls/FormsControls\";\nimport { connect } from \"react-redux\"; \nimport { login } from \"../../redux/auth-reducer\";\nimport { Redirect } from \"react-router-dom\";\nimport style from \"../common/FormsControls/FormsControls.module.css\"\n\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\n    return (\n        <form onSubmit={handleSubmit }>\n            {createField(\"Email\", \"email\", [required], Input)}\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\n\n            { captchaUrl && <img alt='' src={captchaUrl}/>}\n            { captchaUrl && createField(\"anti bot captcha\", \"captcha\", [required], Input, {})}\n\n            {error && <div className={style.formSummaryError}>\n                {error}\n            </div>}\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\n    }\n    \n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"} />\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\n    </div>\n}\n\nconst mapStateToProps = (state) => ({\n    captchaUrl: state.auth.captchaUrl,\n    isAuth: state.auth.isAuth\n})\nexport default connect( mapStateToProps, {login})(Login);","//import { InitialStateType } from './app-reducer';\nimport {getAuthUserData} from \"./auth-reducer\";\n\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\nexport type InitialStateType = {\n    initialized: boolean\n}\n\nlet initialState: InitialStateType = {\n    initialized: false,\n};\n\nconst appReducer = (state = initialState, action: any): InitialStateType => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n\n        default:\n            return state;\n    }\n}\n\ntype InitializedSuccessActionType = {\n    type: typeof INITIALIZED_SUCCESS\n}\n\nexport const initializedSuccess = (): InitializedSuccessActionType => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => (dispatch: any) => {\n    let promise = dispatch(getAuthUserData());\n\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());\n        });\n}\n\n\nexport default appReducer;","let initialState = {};\n\ntype InitialStateType = typeof initialState\n\nconst sidebarReducer = (state = initialState, action: any): InitialStateType => {\n    return state;\n}\n\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore, compose} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { reducer as formReducer } from 'redux-form'\nimport appReducer from \"./app-reducer\";\n\nlet rootReducer = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n});\n\ntype RootReducerType = typeof rootReducer; //( globalstate: GlobalSTATE) =>  GlobalSTATE\nexport type AppStateType = ReturnType<RootReducerType>\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(rootReducer,  composeEnhancers(applyMiddleware(thunkMiddleware)))\n// @ts-ignore\nwindow.__store__ = store\n\nexport default store","import React from \"react\";\nimport Preloader from \"../components/common/Preloader/Preloader\";\n\n\nexport const withSuspense = (Component) => {\n    return (props) => {\n        return <React.Suspense fallback={<Preloader />} >\n            <Component {...props} />\n        </React.Suspense>\n    };\n} ","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {BrowserRouter, Route, withRouter, Switch, Redirect} from \"react-router-dom\";\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport { connect, Provider } from \"react-redux\";\nimport {compose} from \"redux\"\nimport { initializeApp } from './redux/app-reducer';\nimport Preloader from './components/common/Preloader/Preloader';\nimport store from \"./redux/redux-store\";\nimport { withSuspense } from './hoc/withSuspense';\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends Component {\n  catchAllUnhandledErrors = (reason, promise) => {\n    alert(\"Some error occurred\");\n    //console.error(promiseRejectionEvent);\n}\ncomponentDidMount() {\n    this.props.initializeApp();\n    window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n}\ncomponentWillUnmount() {\n    window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n}\n\n  render () {  \n    if (!this.props.initialized){\n        return <Preloader/>\n    }\n\n    return (\n    <div className='app-wrapper'>\n        <HeaderContainer />\n        <Navbar />\n          <div className='app-wrapper-content'>\n          <Switch>\n              <Route exact path='/' render={() => <Redirect to={\"/profile\"}/>}/>\n              <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\n              <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)} />\n              <Route path='/users' render={() => <UsersContainer pageTitle={\"Sakura\"}/>} />\n              <Route path='/login' render={() => <Login />} />\n              <Route path='*' render={() => <div>404 not found</div>} />\n          </Switch>\n          </div>\n  </div>\n  );}\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n}) \n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, {initializeApp}))(App);\n\nconst JSApp = (props) => {\n return <BrowserRouter >\n      <Provider store={store}>\n          <AppContainer />\n      </Provider>\n  </BrowserRouter>\n}\n\nexport default JSApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport JSApp from \"./App\";\n\nReactDOM.render(<JSApp/>, document.getElementById('root'));\n","import  './Preloader.css';\n\nlet Preloader = (props) => {\n    return <div class=\"lds-hourglass\"></div>\n}\n\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formSummaryError\":\"FormsControls_formSummaryError__1F2-S\"};","export const required = value => {\n    if (value) return undefined;\n    return 'Field is required';\n}\n\n\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__18P4_\",\"pageNumber\":\"Paginator_pageNumber__xOsKi\",\"selectedPage\":\"Paginator_selectedPage__3SIki\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","import { PostType, ProfileType, PhotosType } from './../types/types';\nimport { stopSubmit } from \"redux-form\";\nimport { profileAPI, usersAPI } from \"../api/api\";\n\nconst ADD_POST = \"ADD-POST\";\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\n\nlet initialState = {\n  posts: [\n    { id: 1, message: \"hi, how are you?\", likesCount: 12 },\n    { id: 2, message: \"this is a post?\", likesCount: 23 },\n    { id: 3, message: \"viva latina?\", likesCount: 3 },\n  ] as Array<PostType>,\n  newPostText: \"\",\n  profile: null as ProfileType | null,\n  status: \"\",\n};\n\nexport type InitialStateType = typeof initialState;\n\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\n\n  switch (action.type) {\n      case ADD_POST: {\n          let newPost = {\n              id: 5,\n              message: action.newPostText,\n              likesCount: 0\n          };\n          return {\n              ...state,\n              posts: [...state.posts, newPost],\n              newPostText: ''\n          };\n      }\n      case SET_STATUS: {\n          return {\n              ...state,\n              status: action.status\n          }\n      }\n      case SET_USER_PROFILE: {\n          return {...state, profile: action.profile}\n      }\n\n      case DELETE_POST:\n          return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\n\n      case SAVE_PHOTO_SUCCESS:\n          debugger;\n          return {...state, profile: {...state.profile, photos: action.photos } as ProfileType}\n      default:\n          return state;\n  }\n}\n\ntype AddPostActionCreatorActionType = {\n  type: typeof ADD_POST,\n  newPostText: string\n}\nexport const addPostActionCreator = (newPostText: string): AddPostActionCreatorActionType => ({type: ADD_POST, newPostText})\ntype SetUserProfileActionType = {\n  type: typeof SET_USER_PROFILE,\n  profile: ProfileType\n}\nexport const setUserProfile = (profile: ProfileType): SetUserProfileActionType => ({type: SET_USER_PROFILE, profile})\ntype SetStatusActionType = {\n  type: typeof SET_STATUS,\n  status: string\n}\nexport const setStatus = (status: string): SetStatusActionType => ({type: SET_STATUS, status})\ntype DeletePostActionType = {\n  type: typeof DELETE_POST,\n  postId: number\n}\nexport const deletePost = (postId: number): DeletePostActionType => ({type: DELETE_POST, postId})\ntype SavePhotoSuccessActionType = {\n  type: typeof SAVE_PHOTO_SUCCESS,\n  photos: PhotosType\n}\nexport const savePhotoSuccess = (photos: PhotosType):  SavePhotoSuccessActionType=> ({type: SAVE_PHOTO_SUCCESS, photos})\nexport const getUserProfile = (userId: number) => async (dispatch: any) => {\n  const response = await usersAPI.getProfile(userId);\n  dispatch(setUserProfile(response.data));\n}\nexport const getStatus = (userId: number) => async (dispatch: any) => {\n  let response = await profileAPI.getStatus(userId);\n  dispatch(setStatus(response.data));\n}\nexport const updateStatus = (status: string) => async (dispatch: any) => {\n  let response = await profileAPI.updateStatus(status);\n\n  if (response.data.resultCode === 0) {\n      dispatch(setStatus(status));\n  }\n}\nexport const savePhoto = (file: any) => async (dispatch: any) => {\n  let response = await profileAPI.savePhoto(file);\n\n  if (response.data.resultCode === 0) {\n      dispatch(savePhotoSuccess(response.data.data.photos));\n  }\n}\nexport const saveProfile = (profile: ProfileType) => async (dispatch: any, getState: any) => {\n  const userId = getState().auth.userId;\n  const response = await profileAPI.saveProfile(profile);\n\n  if (response.data.resultCode === 0) {\n      dispatch(getUserProfile(userId));\n  } else {\n      dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\n      return Promise.reject(response.data.messages[0]);\n  }\n}\n\nexport default profileReducer;"],"sourceRoot":""}